import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.stats import stats
import scipy as scipy
import statsmodels.stats as stats2
from statsmodels.stats import stattools
import pandas_datareader.data as web
import datetime

start = datetime.datetime(2006, 3, 1)
end = datetime.datetime(2019, 1, 1)
series_1 = web.DataReader(['UNRATE'], 'fred', start, end)
series_2 = web.DataReader(['INDPRO'], 'fred', start, end)
series_3 = web.DataReader(['TTLCONS'], 'fred', start, end)
series_4 = web.DataReader(['TCU'], 'fred', start, end)

kpi_1_df = pd.DataFrame(series_1)
kpi_2_df = pd.DataFrame(series_2)
kpi_3_df = pd.DataFrame(series_3)
kpi_4_df = pd.DataFrame(series_4)

kpi_1_df.columns = ['UNRATE']
kpi_2_df.columns = ['INDPRO']
kpi_3_df.columns = ['TTLCONS']
kpi_4_df.columns = ['TCU']
frames = [kpi_1_df, kpi_2_df, kpi_3_df,kpi_4_df]
results = pd.concat(frames, axis=1)
print(results)
#print(results.iloc[-1,results.columns.get_loc('TTLCONS')])

for idx, col in enumerate(results.columns):

    freq = "monthly "
    units = " million "
    colname = col

    selectedCol = results.loc[:, [col]]

    alltime = selectedCol.mean()[0]
    low = selectedCol.min()[0]
    maximum = selectedCol.max()[0]
    today = selectedCol.iloc[-1][0]
    one_year = selectedCol.iloc[-13:-1].mean()[0]
    two_year = selectedCol.iloc[-24:-1].mean()[0]
    five_year = selectedCol.iloc[-60:-1].mean()[0]
    one_year_vol = selectedCol.iloc[-13:-1].std()[0]
    two_year_vol = selectedCol.iloc[-24:-1].std()[0]
    five_year_vol = selectedCol.iloc[-60:-1].std()[0]
    today_vs_1 = ((today/one_year) -1)*100
    today_vs_2 = ((today/two_year) -1)*100
    today_vs_5 = ((today/five_year) -1)*100
    rolling_1 = selectedCol.rolling(window=3).mean()
    rolling_2 = selectedCol.rolling(window=6).mean()
    rolling_3 = selectedCol.rolling(window=9).mean()
    today_vs_1_rolling = ((today/rolling_1.iloc[0]) -1)*100
    today_vs_2_rolling = ((today/rolling_2.iloc[0]) -1)*100
    today_vs_3_rolling = ((today/rolling_3.iloc[0]) -1)*100
    summary = ("The " + str(freq) + str(colname) + " currently stands at " + str(today) + str(units) + " which compares to the 1,2 and 5 year averages of " + str(one_year) + str(units) + "," + str(two_year) + str(units) + "," + " and " + str(five_year) + str(units) + " respectively. " + " Based on the current " + str(colname) + " levels, that reflects a change of" + str(today_vs_1) + ", " + str(today_vs_2) + " and " + str(today_vs_5) + " respectively." " Since the metric began being tracked, the minimum, maximum and long run average total " + str(low) + str(units) + ", " + str(maximum) + str(units) + " and " + str(alltime) + str(units) + " respectively. " "The 1, 2 and 5 year standard deviation for " + str(colname) + " totals " + str(one_year_vol) + str(units) + " ," + str(two_year_vol) + str(units) + " and" + str(five_year_vol) + str(units) + " respectively." + " Based on the current " + str(colname) + " levels compared to the 3, 6 and 9 month rolling averages, the current level reflects a change of " + str(today_vs_1_rolling[0]) + ", " + str(today_vs_2_rolling[0]) + " and " + str(today_vs_3_rolling[0]) + " respectively.")
    print(summary)
